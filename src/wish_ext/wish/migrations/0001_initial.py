# Generated by Django 2.2.18 on 2022-10-21 05:01

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('team', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('u_at', models.DateTimeField(auto_now=True)),
                ('external_id', models.TextField()),
                ('name', models.TextField()),
                ('ticket_name', models.TextField()),
                ('ticket_type', models.TextField()),
                ('cost_type', models.CharField(choices=[('free', '免費'), ('code', '兌換碼'), ('credit', '點數')], default='free', max_length=64)),
                ('removed', models.BooleanField(default=False)),
                ('attributions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.Team')),
            ],
        ),
        migrations.CreateModel(
            name='MemberLevelBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('u_at', models.DateTimeField(auto_now=True)),
                ('external_id', models.TextField()),
                ('rank', models.IntegerField(default=0)),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.TextField()),
                ('removed', models.BooleanField(default=False)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.Team')),
            ],
        ),
        migrations.CreateModel(
            name='WishInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('u_at', models.DateTimeField(auto_now=True)),
                ('last_level_direction', models.CharField(blank=True, choices=[('up', '升階'), ('stay', '續等'), ('down', '降等')], max_length=64, null=True)),
                ('attributions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('clientbase', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wish_info', to='team.ClientBase')),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clientbases', to='wish.MemberLevelBase')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PointLogBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('u_at', models.DateTimeField(auto_now=True)),
                ('point_name', models.TextField()),
                ('datetime', models.DateTimeField(null=True)),
                ('amount', models.IntegerField(default=0)),
                ('is_transaction', models.BooleanField(default=False)),
                ('removed', models.BooleanField(default=False)),
                ('attributions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('clientbase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.ClientBase')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.Team')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LevelLogBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('u_at', models.DateTimeField(auto_now=True)),
                ('datetime', models.DateTimeField(null=True)),
                ('from_datetime', models.DateTimeField(null=True)),
                ('to_datetime', models.DateTimeField(null=True)),
                ('source_type', models.CharField(max_length=128)),
                ('removed', models.BooleanField(default=False)),
                ('clientbase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.ClientBase')),
                ('from_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_logs', to='wish.MemberLevelBase')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.Team')),
                ('to_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_logs', to='wish.MemberLevelBase')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventLogBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('u_at', models.DateTimeField(auto_now=True)),
                ('datetime', models.DateTimeField(null=True)),
                ('cost_type', models.CharField(choices=[('claim', '領取'), ('use', '使用')], default='claim', max_length=64)),
                ('removed', models.BooleanField(default=False)),
                ('attributions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('clientbase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.ClientBase')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='wish.EventBase')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.Team')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='memberlevelbase',
            index=models.Index(fields=['team'], name='wish_member_team_id_e753ad_idx'),
        ),
        migrations.AddIndex(
            model_name='memberlevelbase',
            index=models.Index(fields=['name'], name='wish_member_name_23e770_idx'),
        ),
        migrations.AddIndex(
            model_name='memberlevelbase',
            index=models.Index(fields=['team', 'name'], name='wish_member_team_id_2671db_idx'),
        ),
        migrations.AddIndex(
            model_name='eventbase',
            index=models.Index(fields=['cost_type'], name='wish_eventb_cost_ty_b0bb77_idx'),
        ),
        migrations.AddIndex(
            model_name='eventbase',
            index=models.Index(fields=['ticket_type'], name='wish_eventb_ticket__04be23_idx'),
        ),
        migrations.AddIndex(
            model_name='eventbase',
            index=models.Index(fields=['ticket_type', 'cost_type'], name='wish_eventb_ticket__b3bb77_idx'),
        ),
    ]
